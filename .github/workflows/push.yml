name: Build
on:
  push:

jobs:
  make_release:
    name: Generate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: get-npm-version
      #   id: package-version
      #   uses: tyankatsu0105/read-package-version-actions@v1

      # - name: Fetch tags
      #   continue-on-error: true
      #   run: git fetch --depth=1 origin "+refs/tags/*:refs/tags/*"

      # - id: checkTag
      #   run: git show-ref --tags --verify --quiet -- "refs/tags/v${{ steps.package-version.outputs.version }}" && echo "::set-output name=tagged::1" || echo "::set-output name=tagged::0"

      # - run: echo ${{ steps.checkTag.outputs.tagged }}

      # - name: Create Release
      #   id: create_release
      #   if: steps.checkTag.outputs.tagged == 1
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ steps.package-version.outputs.version }}
      #     release_name: v${{ steps.package-version.outputs.version }}
      #     draft: false
      #     prerelease: true

  build:
    runs-on: ${{ matrix.os }}
    name: Build
    needs: [make_release]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        arch: [ia32, x64]
        runtime: [nwjs, electron, node]
        os: [macos-latest, ubuntu-latest, windows-latest]
        exclude:
          - os: macos-latest
            arch: ia32

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16"

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib

      # Install dep
      - if: matrix.os == 'macos-latest'
        run: brew install p7zip

      - uses: actions/setup-python@v2
        with:
          python-version: 2.7.18

      # Extract
      - run: 7z x sdk.zip -y -p${{ secrets.ZIP_PASSWORD }}
        working-directory: ci

      - run: mv sdk ../deps/steamworks_sdk
        working-directory: ci

      - run: npm install
        working-directory: ci

      - run: npm config set python python2.7

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        if: matrix.os == 'windows-latest'

      - run: npm install

      - run: npx tsc
        working-directory: ci

      - name: "Build"
        shell: bash
        # env:
        #   CXX: g++-10
        #   CC: gcc-10
        run: node ./ci/dist/index.js --os=${{matrix.os}} --runtime=${{matrix.runtime}} --arch=${{matrix.arch}}

      # - name: "Test"
      #   shell: bash
      #   run: node ./ci/dist/e2e/index.js --os=${{matrix.os}} --runtime=${{matrix.runtime}} --arch=${{matrix.arch}}

      - name: get-npm-version
        id: package-version
        uses: tyankatsu0105/read-package-version-actions@v1

      - uses: actions/upload-artifact@v2
        with:
          path: ./ci/artifacts/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - run: ls -la ./artifacts

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./artifacts/**
          prerelease: true
